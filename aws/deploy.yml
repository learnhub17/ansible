---
- name: Provision ec2 instances based on the environment
  hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - vars/dependencies.yml
    - vars/credentials.yml

  tasks:
  - name: Create required security groups
    ec2_group:
      name: "{{ item.name }}"
      description: "{{ item.desc }}"
      rules: "{{ item.rules }}"
      region: "{{ ec2_region }}"
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
    with_items: "{{ security_groups }}"

  - name: Launch instances
    ec2: 
      region: "{{ ec2_region }}"
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
      keypair: "{{ item.keypair }}"
      group: "{{ item.group }}"
      instance_type: "{{ item.instance_type }}"
      image: "{{ item.image }}"
      instance_tags: "{{ item.instance_tags }}"
      exact_count: "{{ item.exact_count }}"
      count_tag: "{{ item.count_tag }}"
#      vpc_subnet_id: "{{ public_subnet }}"
#      assign_public_ip: True
#      user_data: |
#              #!/bin/sh
#              sudo apt-get install apache2 -y
      user_data: "{{ lookup('file', 'config.sh') }}"
      wait: true
    register: ec2
    with_items: "{{ ec2_instances }}"


  - name: run script 
    local_action: command sudo sh config1.sh
